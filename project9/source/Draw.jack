
/**this class does all renderings on the screen*/

class Draw {
	field int placeholder;
	
	/**clear 16*16 cells, receives the starting cell (0~511), and rows and columns to be cleared*/
	function void clear(int loc, int rows, int cols) {
		var int i;
		var int j;
		var int r;
		var int c;
		let r = loc/32;
		let c = loc - ((loc/32)*32);
		let i = 0;
		let j = 0;
		while (i < rows) {
			while (j < cols) {
				do Draw.clearCell(((r + i) * 16 * 32) + (c + j));
				let j = j + 1;
			}
			let i = i + 1;
			let j = 0;
		}
		return;
	}
	
	/**takes the code for a block, and draws it, dispatches the code to seperate draw functions*/
	function void drawBlock (int i, char num) {
		if (num = 48) {
			do Draw.drawWall(i);
		}
		if (num = 50) {
			do Draw.drawUpstair(i);
		}
		if (num = 51) {
			do Draw.drawDownstair(i);
		}
		if (num = 52) {
			do Draw.drawPrincess(i);
		}
		if (num = 53) {
			do Draw.drawShop(i);
		}
		if (num = 54) {
			do Draw.drawDoor(i);
		}
		if (num = 65) {
			do Draw.drawElixir(i);
		}
		if (num = 66) {
			do Draw.drawSword(i);
		}
		if (num = 67) {
			do Draw.drawShield(i);
		}
		if (num = 68) {
			do Draw.drawKey(i);
		}
		if (num = 69) {
			do Draw.drawCoin(i);
		}
		if (num = 97) {
			do Draw.drawWS(i);
		}
		if (num = 98) {
			do Draw.drawBS(i);
		}
		if (num = 99) {
			do Draw.drawSB(i);
		}
		if (num = 100) {
			do Draw.drawLB(i);
		}
		if (num = 101) {
			do Draw.drawSK(i);
		}
		if (num = 102) {
			do Draw.drawWM(i);
		}
		if (num = 103) {
			do Draw.drawBM(i);
		}
		if (num = 104) {
			do Draw.drawWG(i);
		}
		if (num = 105) {
			do Draw.drawBG(i);
		}
		if (num = 106) {
			do Draw.drawDEVIL(i);
		}
		return;
	}
	
	/**the followings draw different elements of the map*/
	function void drawWall (int i) {
		var int memAddress;
		var int r;
		var int c;
		let r = i / 8;
		let c = i - ((i / 8) * 8);
		let memAddress = 16384 + (r * 32 * 32 + (c * 2) + 16);
		do Memory.poke(memAddress+0, -1);
		do Memory.poke(memAddress+32, 384);
		do Memory.poke(memAddress+64, 384);
		do Memory.poke(memAddress+96, 384);
		do Memory.poke(memAddress+128, 384);
		do Memory.poke(memAddress+160, 384);
		do Memory.poke(memAddress+192, 384);
		do Memory.poke(memAddress+224, -1);
		do Memory.poke(memAddress+256, -1);
		do Memory.poke(memAddress+288, -32767);
		do Memory.poke(memAddress+320, -32767);
		do Memory.poke(memAddress+352, -32767);
		do Memory.poke(memAddress+384, -32767);
		do Memory.poke(memAddress+416, -32767);
		do Memory.poke(memAddress+448, -32767);
		do Memory.poke(memAddress+480, -1);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, -1);
		do Memory.poke(memAddress+32, 384);
		do Memory.poke(memAddress+64, 384);
		do Memory.poke(memAddress+96, 384);
		do Memory.poke(memAddress+128, 384);
		do Memory.poke(memAddress+160, 384);
		do Memory.poke(memAddress+192, 384);
		do Memory.poke(memAddress+224, -1);
		do Memory.poke(memAddress+256, -1);
		do Memory.poke(memAddress+288, -32767);
		do Memory.poke(memAddress+320, -32767);
		do Memory.poke(memAddress+352, -32767);
		do Memory.poke(memAddress+384, -32767);
		do Memory.poke(memAddress+416, -32767);
		do Memory.poke(memAddress+448, -32767);
		do Memory.poke(memAddress+480, -1);
		let memAddress = memAddress + 511;
		do Memory.poke(memAddress+0, -1);
		do Memory.poke(memAddress+32, 384);
		do Memory.poke(memAddress+64, 384);
		do Memory.poke(memAddress+96, 384);
		do Memory.poke(memAddress+128, 384);
		do Memory.poke(memAddress+160, 384);
		do Memory.poke(memAddress+192, 384);
		do Memory.poke(memAddress+224, -1);
		do Memory.poke(memAddress+256, -1);
		do Memory.poke(memAddress+288, -32767);
		do Memory.poke(memAddress+320, -32767);
		do Memory.poke(memAddress+352, -32767);
		do Memory.poke(memAddress+384, -32767);
		do Memory.poke(memAddress+416, -32767);
		do Memory.poke(memAddress+448, -32767);
		do Memory.poke(memAddress+480, -1);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, -1);
		do Memory.poke(memAddress+32, 384);
		do Memory.poke(memAddress+64, 384);
		do Memory.poke(memAddress+96, 384);
		do Memory.poke(memAddress+128, 384);
		do Memory.poke(memAddress+160, 384);
		do Memory.poke(memAddress+192, 384);
		do Memory.poke(memAddress+224, -1);
		do Memory.poke(memAddress+256, -1);
		do Memory.poke(memAddress+288, -32767);
		do Memory.poke(memAddress+320, -32767);
		do Memory.poke(memAddress+352, -32767);
		do Memory.poke(memAddress+384, -32767);
		do Memory.poke(memAddress+416, -32767);
		do Memory.poke(memAddress+448, -32767);
		do Memory.poke(memAddress+480, -1);
		return;
	}
	
	function void drawUpstair (int i) {
		var int memAddress;
		var int r;
		var int c;
		let r = i / 8;
		let c = i - ((i / 8) * 8);
		let memAddress = 16384 + (r * 32 * 32 + (c * 2) + 16);
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, -16384);
		do Memory.poke(memAddress+96, 16384);
		do Memory.poke(memAddress+128, 16384);
		do Memory.poke(memAddress+160, 16384);
		do Memory.poke(memAddress+192, 16384);
		do Memory.poke(memAddress+224, -4096);
		do Memory.poke(memAddress+256, -2048);
		do Memory.poke(memAddress+288, -1024);
		do Memory.poke(memAddress+320, 512);
		do Memory.poke(memAddress+352, 512);
		do Memory.poke(memAddress+384, 512);
		do Memory.poke(memAddress+416, 512);
		do Memory.poke(memAddress+448, -128);
		do Memory.poke(memAddress+480, -64);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, -2);
		do Memory.poke(memAddress+32, -1);
		do Memory.poke(memAddress+64, -1);
		do Memory.poke(memAddress+96, -16384);
		do Memory.poke(memAddress+128, -16384);
		do Memory.poke(memAddress+160, -16384);
		do Memory.poke(memAddress+192, -16384);
		do Memory.poke(memAddress+224, -1);
		do Memory.poke(memAddress+256, -1);
		do Memory.poke(memAddress+288, -1);
		do Memory.poke(memAddress+320, -8192);
		do Memory.poke(memAddress+352, -8192);
		do Memory.poke(memAddress+384, -8192);
		do Memory.poke(memAddress+416, -8192);
		do Memory.poke(memAddress+448, -1);
		do Memory.poke(memAddress+480, -1);
		let memAddress = memAddress + 511;
		do Memory.poke(memAddress+0, -32);
		do Memory.poke(memAddress+32, 16);
		do Memory.poke(memAddress+64, 16);
		do Memory.poke(memAddress+96, 16);
		do Memory.poke(memAddress+128, 16);
		do Memory.poke(memAddress+160, -4);
		do Memory.poke(memAddress+192, -2);
		do Memory.poke(memAddress+224, -1);
		do Memory.poke(memAddress+256, 1);
		do Memory.poke(memAddress+288, 1);
		do Memory.poke(memAddress+320, 1);
		do Memory.poke(memAddress+352, 1);
		do Memory.poke(memAddress+384, 1);
		do Memory.poke(memAddress+416, -1);
		do Memory.poke(memAddress+448, -1);
		do Memory.poke(memAddress+480, -1);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, -1);
		do Memory.poke(memAddress+32, -4096);
		do Memory.poke(memAddress+64, -4096);
		do Memory.poke(memAddress+96, -4096);
		do Memory.poke(memAddress+128, -4096);
		do Memory.poke(memAddress+160, -1);
		do Memory.poke(memAddress+192, -1);
		do Memory.poke(memAddress+224, -1);
		do Memory.poke(memAddress+256, -1024);
		do Memory.poke(memAddress+288, -1024);
		do Memory.poke(memAddress+320, -1024);
		do Memory.poke(memAddress+352, -1024);
		do Memory.poke(memAddress+384, -1024);
		do Memory.poke(memAddress+416, -1);
		do Memory.poke(memAddress+448, -1);
		do Memory.poke(memAddress+480, -1);
		return;
	}
	
	function void drawDownstair (int i) {
		var int memAddress;
		var int r;
		var int c;
		let r = i / 8;
		let c = i - ((i / 8) * 8);
		let memAddress = 16384 + (r * 32 * 32 + (c * 2) + 16);
		do Memory.poke(memAddress+0, -1);
		do Memory.poke(memAddress+32, -249);
		do Memory.poke(memAddress+64, 1799);
		do Memory.poke(memAddress+96, 1799);
		do Memory.poke(memAddress+128, 32519);
		do Memory.poke(memAddress+160, -30969);
		do Memory.poke(memAddress+192, -30969);
		do Memory.poke(memAddress+224, -30969);
		do Memory.poke(memAddress+256, -30969);
		do Memory.poke(memAddress+288, -30969);
		do Memory.poke(memAddress+320, -30969);
		do Memory.poke(memAddress+352, -30969);
		do Memory.poke(memAddress+384, -30969);
		do Memory.poke(memAddress+416, -30969);
		do Memory.poke(memAddress+448, -30969);
		do Memory.poke(memAddress+480, -30969);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, -1);
		do Memory.poke(memAddress+32, -1);
		do Memory.poke(memAddress+64, -16384);
		do Memory.poke(memAddress+96, -16384);
		do Memory.poke(memAddress+128, -16384);
		do Memory.poke(memAddress+160, -16384);
		do Memory.poke(memAddress+192, -16383);
		do Memory.poke(memAddress+224, -16381);
		do Memory.poke(memAddress+256, -16381);
		do Memory.poke(memAddress+288, -16321);
		do Memory.poke(memAddress+320, -16317);
		do Memory.poke(memAddress+352, -16189);
		do Memory.poke(memAddress+384, -15933);
		do Memory.poke(memAddress+416, -15933);
		do Memory.poke(memAddress+448, -8253);
		do Memory.poke(memAddress+480, -7741);
		let memAddress = memAddress + 511;
		do Memory.poke(memAddress+0, -30969);
		do Memory.poke(memAddress+32, -30969);
		do Memory.poke(memAddress+64, -30969);
		do Memory.poke(memAddress+96, -30969);
		do Memory.poke(memAddress+128, -30969);
		do Memory.poke(memAddress+160, -30969);
		do Memory.poke(memAddress+192, -30969);
		do Memory.poke(memAddress+224, -30969);
		do Memory.poke(memAddress+256, -30969);
		do Memory.poke(memAddress+288, -30969);
		do Memory.poke(memAddress+320, -30969);
		do Memory.poke(memAddress+352, -30721);
		do Memory.poke(memAddress+384, -30721);
		do Memory.poke(memAddress+416, -1);
		do Memory.poke(memAddress+448, -1);
		do Memory.poke(memAddress+480, -1);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, -7741);
		do Memory.poke(memAddress+32, -7741);
		do Memory.poke(memAddress+64, -7741);
		do Memory.poke(memAddress+96, -7741);
		do Memory.poke(memAddress+128, -7741);
		do Memory.poke(memAddress+160, -7741);
		do Memory.poke(memAddress+192, -7741);
		do Memory.poke(memAddress+224, -7741);
		do Memory.poke(memAddress+256, -7741);
		do Memory.poke(memAddress+288, -7741);
		do Memory.poke(memAddress+320, -7741);
		do Memory.poke(memAddress+352, -7741);
		do Memory.poke(memAddress+384, -7741);
		do Memory.poke(memAddress+416, -7681);
		do Memory.poke(memAddress+448, -1);
		do Memory.poke(memAddress+480, -1);
		return;
	}
	
	function void drawPrincess (int i) {
		var int memAddress;
		var int r;
		var int c;
		let r = i / 8;
		let c = i - ((i / 8) * 8);
		let memAddress = 16384 + (r * 32 * 32 + (c * 2) + 16);
		do Memory.poke(memAddress+0, -4096);
		do Memory.poke(memAddress+32, -1024);
		do Memory.poke(memAddress+64, -512);
		do Memory.poke(memAddress+96, -256);
		do Memory.poke(memAddress+128, -640);
		do Memory.poke(memAddress+160, 31680);
		do Memory.poke(memAddress+192, 14272);
		do Memory.poke(memAddress+224, 8160);
		do Memory.poke(memAddress+256, -20512);
		do Memory.poke(memAddress+288, -14368);
		do Memory.poke(memAddress+320, -32272);
		do Memory.poke(memAddress+352, 112);
		do Memory.poke(memAddress+384, 14576);
		do Memory.poke(memAddress+416, 14840);
		do Memory.poke(memAddress+448, 1912);
		do Memory.poke(memAddress+480, 8184);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 15);
		do Memory.poke(memAddress+32, 63);
		do Memory.poke(memAddress+64, 127);
		do Memory.poke(memAddress+96, 255);
		do Memory.poke(memAddress+128, 447);
		do Memory.poke(memAddress+160, 990);
		do Memory.poke(memAddress+192, 1004);
		do Memory.poke(memAddress+224, 2040);
		do Memory.poke(memAddress+256, 2037);
		do Memory.poke(memAddress+288, 2019);
		do Memory.poke(memAddress+320, 3969);
		do Memory.poke(memAddress+352, 3584);
		do Memory.poke(memAddress+384, 3868);
		do Memory.poke(memAddress+416, 8092);
		do Memory.poke(memAddress+448, 7904);
		do Memory.poke(memAddress+480, 8184);
		let memAddress = memAddress + 511;
		do Memory.poke(memAddress+0, 26600);
		do Memory.poke(memAddress+32, 68);
		do Memory.poke(memAddress+64, 4);
		do Memory.poke(memAddress+96, 72);
		do Memory.poke(memAddress+128, 472);
		do Memory.poke(memAddress+160, 2008);
		do Memory.poke(memAddress+192, -30760);
		do Memory.poke(memAddress+224, -16);
		do Memory.poke(memAddress+256, -31200);
		do Memory.poke(memAddress+288, 768);
		do Memory.poke(memAddress+320, 384);
		do Memory.poke(memAddress+352, 192);
		do Memory.poke(memAddress+384, 96);
		do Memory.poke(memAddress+416, 48);
		do Memory.poke(memAddress+448, 24);
		do Memory.poke(memAddress+480, -4);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 6118);
		do Memory.poke(memAddress+32, 8704);
		do Memory.poke(memAddress+64, 8192);
		do Memory.poke(memAddress+96, 4608);
		do Memory.poke(memAddress+128, 7040);
		do Memory.poke(memAddress+160, 7136);
		do Memory.poke(memAddress+192, 7137);
		do Memory.poke(memAddress+224, 4095);
		do Memory.poke(memAddress+256, 1121);
		do Memory.poke(memAddress+288, 192);
		do Memory.poke(memAddress+320, 384);
		do Memory.poke(memAddress+352, 768);
		do Memory.poke(memAddress+384, 1536);
		do Memory.poke(memAddress+416, 3072);
		do Memory.poke(memAddress+448, 6144);
		do Memory.poke(memAddress+480, 16383);
		return;
	}
	
	function void drawShop (int i) {
		var int memAddress;
		var int r;
		var int c;
		let r = i / 8;
		let c = i - ((i / 8) * 8);
		let memAddress = 16384 + (r * 32 * 32 + (c * 2) + 16);
		do Memory.poke(memAddress+0, -256);
		do Memory.poke(memAddress+32, 3968);
		do Memory.poke(memAddress+64, 3968);
		do Memory.poke(memAddress+96, 3904);
		do Memory.poke(memAddress+128, 3904);
		do Memory.poke(memAddress+160, 3872);
		do Memory.poke(memAddress+192, 3872);
		do Memory.poke(memAddress+224, 3856);
		do Memory.poke(memAddress+256, 3856);
		do Memory.poke(memAddress+288, 3848);
		do Memory.poke(memAddress+320, 3848);
		do Memory.poke(memAddress+352, 3852);
		do Memory.poke(memAddress+384, 3852);
		do Memory.poke(memAddress+416, 3854);
		do Memory.poke(memAddress+448, 3855);
		do Memory.poke(memAddress+480, 3855);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 255);
		do Memory.poke(memAddress+32, 271);
		do Memory.poke(memAddress+64, 271);
		do Memory.poke(memAddress+96, 783);
		do Memory.poke(memAddress+128, 783);
		do Memory.poke(memAddress+160, 1807);
		do Memory.poke(memAddress+192, 1807);
		do Memory.poke(memAddress+224, 3855);
		do Memory.poke(memAddress+256, 3855);
		do Memory.poke(memAddress+288, 7951);
		do Memory.poke(memAddress+320, 7951);
		do Memory.poke(memAddress+352, 12047);
		do Memory.poke(memAddress+384, 12047);
		do Memory.poke(memAddress+416, 20239);
		do Memory.poke(memAddress+448, -12529);
		do Memory.poke(memAddress+480, -28913);
		let memAddress = memAddress + 511;
		do Memory.poke(memAddress+0, 26238);
		do Memory.poke(memAddress+32, 24);
		do Memory.poke(memAddress+64, 24);
		do Memory.poke(memAddress+96, -32744);
		do Memory.poke(memAddress+128, 24600);
		do Memory.poke(memAddress+160, 24600);
		do Memory.poke(memAddress+192, 24600);
		do Memory.poke(memAddress+224, -32744);
		do Memory.poke(memAddress+256, 24);
		do Memory.poke(memAddress+288, 24);
		do Memory.poke(memAddress+320, 24600);
		do Memory.poke(memAddress+352, -32744);
		do Memory.poke(memAddress+384, 24);
		do Memory.poke(memAddress+416, 24);
		do Memory.poke(memAddress+448, -8);
		do Memory.poke(memAddress+480, -8);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 32358);
		do Memory.poke(memAddress+32, 6144);
		do Memory.poke(memAddress+64, 6144);
		do Memory.poke(memAddress+96, 6145);
		do Memory.poke(memAddress+128, 6150);
		do Memory.poke(memAddress+160, 6144);
		do Memory.poke(memAddress+192, 6144);
		do Memory.poke(memAddress+224, 6145);
		do Memory.poke(memAddress+256, 6150);
		do Memory.poke(memAddress+288, 6150);
		do Memory.poke(memAddress+320, 6150);
		do Memory.poke(memAddress+352, 6145);
		do Memory.poke(memAddress+384, 6144);
		do Memory.poke(memAddress+416, 6144);
		do Memory.poke(memAddress+448, 8191);
		do Memory.poke(memAddress+480, 8191);
		return;
	}
	
	function void drawDoor (int i) {
		var int memAddress;
		var int r;
		var int c;
		let r = i / 8;
		let c = i - ((i / 8) * 8);
		let memAddress = 16384 + (r * 32 * 32 + (c * 2) + 16);
		do Memory.poke(memAddress+0, -1);
		do Memory.poke(memAddress+32, -1);
		do Memory.poke(memAddress+64, -1);
		do Memory.poke(memAddress+96, 391);
		do Memory.poke(memAddress+128, 199);
		do Memory.poke(memAddress+160, 103);
		do Memory.poke(memAddress+192, 55);
		do Memory.poke(memAddress+224, -32737);
		do Memory.poke(memAddress+256, -32753);
		do Memory.poke(memAddress+288, -32761);
		do Memory.poke(memAddress+320, -32761);
		do Memory.poke(memAddress+352, -32761);
		do Memory.poke(memAddress+384, -32761);
		do Memory.poke(memAddress+416, -16377);
		do Memory.poke(memAddress+448, -8185);
		do Memory.poke(memAddress+480, -4089);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, -1);
		do Memory.poke(memAddress+32, -1);
		do Memory.poke(memAddress+64, -1);
		do Memory.poke(memAddress+96, -7808);
		do Memory.poke(memAddress+128, -7424);
		do Memory.poke(memAddress+160, -6656);
		do Memory.poke(memAddress+192, -5120);
		do Memory.poke(memAddress+224, -2047);
		do Memory.poke(memAddress+256, -4095);
		do Memory.poke(memAddress+288, -8191);
		do Memory.poke(memAddress+320, -8191);
		do Memory.poke(memAddress+352, -8191);
		do Memory.poke(memAddress+384, -8191);
		do Memory.poke(memAddress+416, -8189);
		do Memory.poke(memAddress+448, -8185);
		do Memory.poke(memAddress+480, -8177);
		let memAddress = memAddress + 511;
		do Memory.poke(memAddress+0, -4089);
		do Memory.poke(memAddress+32, -4089);
		do Memory.poke(memAddress+64, -8185);
		do Memory.poke(memAddress+96, -16377);
		do Memory.poke(memAddress+128, -32761);
		do Memory.poke(memAddress+160, 7);
		do Memory.poke(memAddress+192, 7);
		do Memory.poke(memAddress+224, 15);
		do Memory.poke(memAddress+256, 31);
		do Memory.poke(memAddress+288, 55);
		do Memory.poke(memAddress+320, 103);
		do Memory.poke(memAddress+352, 199);
		do Memory.poke(memAddress+384, 391);
		do Memory.poke(memAddress+416, -1);
		do Memory.poke(memAddress+448, -1);
		do Memory.poke(memAddress+480, -1);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, -8177);
		do Memory.poke(memAddress+32, -8177);
		do Memory.poke(memAddress+64, -8185);
		do Memory.poke(memAddress+96, -8189);
		do Memory.poke(memAddress+128, -8191);
		do Memory.poke(memAddress+160, -8192);
		do Memory.poke(memAddress+192, -8192);
		do Memory.poke(memAddress+224, -4096);
		do Memory.poke(memAddress+256, -2048);
		do Memory.poke(memAddress+288, -5120);
		do Memory.poke(memAddress+320, -6656);
		do Memory.poke(memAddress+352, -7424);
		do Memory.poke(memAddress+384, -7808);
		do Memory.poke(memAddress+416, -1);
		do Memory.poke(memAddress+448, -1);
		do Memory.poke(memAddress+480, -1);
		return;
	}
	
	function void drawElixir (int i) {
		var int memAddress;
		var int r;
		var int c;
		let r = i / 8;
		let c = i - ((i / 8) * 8);
		let memAddress = 16384 + (r * 32 * 32 + (c * 2) + 16);
		do Memory.poke(memAddress+0, -8192);
		do Memory.poke(memAddress+32, -8192);
		do Memory.poke(memAddress+64, -4096);
		do Memory.poke(memAddress+96, 3072);
		do Memory.poke(memAddress+128, -2048);
		do Memory.poke(memAddress+160, -4096);
		do Memory.poke(memAddress+192, -8192);
		do Memory.poke(memAddress+224, -8192);
		do Memory.poke(memAddress+256, 8192);
		do Memory.poke(memAddress+288, 8192);
		do Memory.poke(memAddress+320, 4096);
		do Memory.poke(memAddress+352, 3072);
		do Memory.poke(memAddress+384, 768);
		do Memory.poke(memAddress+416, 192);
		do Memory.poke(memAddress+448, -32672);
		do Memory.poke(memAddress+480, 6176);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 7);
		do Memory.poke(memAddress+32, 7);
		do Memory.poke(memAddress+64, 15);
		do Memory.poke(memAddress+96, 48);
		do Memory.poke(memAddress+128, 31);
		do Memory.poke(memAddress+160, 15);
		do Memory.poke(memAddress+192, 7);
		do Memory.poke(memAddress+224, 7);
		do Memory.poke(memAddress+256, 4);
		do Memory.poke(memAddress+288, 4);
		do Memory.poke(memAddress+320, 8);
		do Memory.poke(memAddress+352, 48);
		do Memory.poke(memAddress+384, 192);
		do Memory.poke(memAddress+416, 768);
		do Memory.poke(memAddress+448, 1537);
		do Memory.poke(memAddress+480, 1048);
		let memAddress = memAddress + 511;
		do Memory.poke(memAddress+0, 416);
		do Memory.poke(memAddress+32, 96);
		do Memory.poke(memAddress+64, 960);
		do Memory.poke(memAddress+96, 8128);
		do Memory.poke(memAddress+128, -64);
		do Memory.poke(memAddress+160, -640);
		do Memory.poke(memAddress+192, -640);
		do Memory.poke(memAddress+224, -128);
		do Memory.poke(memAddress+256, -3328);
		do Memory.poke(memAddress+288, -3328);
		do Memory.poke(memAddress+320, -3584);
		do Memory.poke(memAddress+352, -512);
		do Memory.poke(memAddress+384, -1024);
		do Memory.poke(memAddress+416, -1024);
		do Memory.poke(memAddress+448, -2048);
		do Memory.poke(memAddress+480, -4096);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 1408);
		do Memory.poke(memAddress+32, 1536);
		do Memory.poke(memAddress+64, 960);
		do Memory.poke(memAddress+96, 1016);
		do Memory.poke(memAddress+128, 1023);
		do Memory.poke(memAddress+160, 511);
		do Memory.poke(memAddress+192, 511);
		do Memory.poke(memAddress+224, 511);
		do Memory.poke(memAddress+256, 255);
		do Memory.poke(memAddress+288, 255);
		do Memory.poke(memAddress+320, 127);
		do Memory.poke(memAddress+352, 127);
		do Memory.poke(memAddress+384, 63);
		do Memory.poke(memAddress+416, 63);
		do Memory.poke(memAddress+448, 31);
		do Memory.poke(memAddress+480, 15);
		return;
	}
	
	function void drawSword (int i) {
		var int memAddress;
		var int r;
		var int c;
		let r = i / 8;
		let c = i - ((i / 8) * 8);
		let memAddress = 16384 + (r * 32 * 32 + (c * 2) + 16);
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, -32767 - 1);
		do Memory.poke(memAddress+96, 16384);
		do Memory.poke(memAddress+128, 8192);
		do Memory.poke(memAddress+160, 8192);
		do Memory.poke(memAddress+192, -24576);
		do Memory.poke(memAddress+224, -24576);
		do Memory.poke(memAddress+256, -24576);
		do Memory.poke(memAddress+288, -24576);
		do Memory.poke(memAddress+320, -24576);
		do Memory.poke(memAddress+352, -24576);
		do Memory.poke(memAddress+384, -24576);
		do Memory.poke(memAddress+416, -24576);
		do Memory.poke(memAddress+448, -24576);
		do Memory.poke(memAddress+480, -24576);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, 1);
		do Memory.poke(memAddress+96, 2);
		do Memory.poke(memAddress+128, 4);
		do Memory.poke(memAddress+160, 4);
		do Memory.poke(memAddress+192, 4);
		do Memory.poke(memAddress+224, 4);
		do Memory.poke(memAddress+256, 4);
		do Memory.poke(memAddress+288, 4);
		do Memory.poke(memAddress+320, 4);
		do Memory.poke(memAddress+352, 4);
		do Memory.poke(memAddress+384, 4);
		do Memory.poke(memAddress+416, 4);
		do Memory.poke(memAddress+448, 4);
		do Memory.poke(memAddress+480, 4);
		let memAddress = memAddress + 511;
		do Memory.poke(memAddress+0, -24576);
		do Memory.poke(memAddress+32, -24576);
		do Memory.poke(memAddress+64, -24576);
		do Memory.poke(memAddress+96, -24576);
		do Memory.poke(memAddress+128, -256);
		do Memory.poke(memAddress+160, -512);
		do Memory.poke(memAddress+192, 31744);
		do Memory.poke(memAddress+224, 28672);
		do Memory.poke(memAddress+256, -16384);
		do Memory.poke(memAddress+288, -16384);
		do Memory.poke(memAddress+320, -16384);
		do Memory.poke(memAddress+352, -8192);
		do Memory.poke(memAddress+384, -16384);
		do Memory.poke(memAddress+416, -32767 - 1);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 4);
		do Memory.poke(memAddress+32, 4);
		do Memory.poke(memAddress+64, 4);
		do Memory.poke(memAddress+96, 4);
		do Memory.poke(memAddress+128, 255);
		do Memory.poke(memAddress+160, 127);
		do Memory.poke(memAddress+192, 62);
		do Memory.poke(memAddress+224, 14);
		do Memory.poke(memAddress+256, 3);
		do Memory.poke(memAddress+288, 3);
		do Memory.poke(memAddress+320, 3);
		do Memory.poke(memAddress+352, 7);
		do Memory.poke(memAddress+384, 3);
		do Memory.poke(memAddress+416, 1);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		return;
	}
	
	function void drawShield (int i) {
		var int memAddress;
		var int r;
		var int c;
		let r = i / 8;
		let c = i - ((i / 8) * 8);
		let memAddress = 16384 + (r * 32 * 32 + (c * 2) + 16);
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, -16384);
		do Memory.poke(memAddress+96, -2048);
		do Memory.poke(memAddress+128, -30976);
		do Memory.poke(memAddress+160, -32544);
		do Memory.poke(memAddress+192, -32516);
		do Memory.poke(memAddress+224, -4);
		do Memory.poke(memAddress+256, -4);
		do Memory.poke(memAddress+288, -32744);
		do Memory.poke(memAddress+320, -16360);
		do Memory.poke(memAddress+352, 24600);
		do Memory.poke(memAddress+384, 24624);
		do Memory.poke(memAddress+416, 24624);
		do Memory.poke(memAddress+448, 24624);
		do Memory.poke(memAddress+480, -16288);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, 3);
		do Memory.poke(memAddress+96, 31);
		do Memory.poke(memAddress+128, 225);
		do Memory.poke(memAddress+160, 1793);
		do Memory.poke(memAddress+192, 16129);
		do Memory.poke(memAddress+224, 16383);
		do Memory.poke(memAddress+256, 16383);
		do Memory.poke(memAddress+288, 6145);
		do Memory.poke(memAddress+320, 6147);
		do Memory.poke(memAddress+352, 6150);
		do Memory.poke(memAddress+384, 3078);
		do Memory.poke(memAddress+416, 3078);
		do Memory.poke(memAddress+448, 3078);
		do Memory.poke(memAddress+480, 1539);
		let memAddress = memAddress + 511;
		do Memory.poke(memAddress+0, -32);
		do Memory.poke(memAddress+32, -32);
		do Memory.poke(memAddress+64, -32576);
		do Memory.poke(memAddress+96, -32576);
		do Memory.poke(memAddress+128, -32384);
		do Memory.poke(memAddress+160, -32384);
		do Memory.poke(memAddress+192, -32000);
		do Memory.poke(memAddress+224, -32000);
		do Memory.poke(memAddress+256, -29184);
		do Memory.poke(memAddress+288, -25600);
		do Memory.poke(memAddress+320, -18432);
		do Memory.poke(memAddress+352, -4096);
		do Memory.poke(memAddress+384, -8192);
		do Memory.poke(memAddress+416, -32767 -1);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 2047);
		do Memory.poke(memAddress+32, 2047);
		do Memory.poke(memAddress+64, 769);
		do Memory.poke(memAddress+96, 769);
		do Memory.poke(memAddress+128, 385);
		do Memory.poke(memAddress+160, 385);
		do Memory.poke(memAddress+192, 193);
		do Memory.poke(memAddress+224, 193);
		do Memory.poke(memAddress+256, 113);
		do Memory.poke(memAddress+288, 57);
		do Memory.poke(memAddress+320, 29);
		do Memory.poke(memAddress+352, 15);
		do Memory.poke(memAddress+384, 7);
		do Memory.poke(memAddress+416, 1);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		return;
	}
	
	function void drawKey (int i) {
		var int memAddress;
		var int r;
		var int c;
		let r = i / 8;
		let c = i - ((i / 8) * 8);
		let memAddress = 16384 + (r * 32 * 32 + (c * 2) + 16);
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, 0);
		do Memory.poke(memAddress+96, 0);
		do Memory.poke(memAddress+128, 0);
		do Memory.poke(memAddress+160, 0);
		do Memory.poke(memAddress+192, 0);
		do Memory.poke(memAddress+224, 0);
		do Memory.poke(memAddress+256, 0);
		do Memory.poke(memAddress+288, 0);
		do Memory.poke(memAddress+320, 0);
		do Memory.poke(memAddress+352, 0);
		do Memory.poke(memAddress+384, 0);
		do Memory.poke(memAddress+416, 24576);
		do Memory.poke(memAddress+448, -8192);
		do Memory.poke(memAddress+480, -16384);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, 0);
		do Memory.poke(memAddress+96, 0);
		do Memory.poke(memAddress+128, 0);
		do Memory.poke(memAddress+160, 0);
		do Memory.poke(memAddress+192, 0);
		do Memory.poke(memAddress+224, 448);
		do Memory.poke(memAddress+256, 483);
		do Memory.poke(memAddress+288, 503);
		do Memory.poke(memAddress+320, 254);
		do Memory.poke(memAddress+352, 124);
		do Memory.poke(memAddress+384, 62);
		do Memory.poke(memAddress+416, 31);
		do Memory.poke(memAddress+448, 15);
		do Memory.poke(memAddress+480, 7);
		let memAddress = memAddress + 511;
		do Memory.poke(memAddress+0, -8192);
		do Memory.poke(memAddress+32, -4096);
		do Memory.poke(memAddress+64, -1152);
		do Memory.poke(memAddress+96, 32736);
		do Memory.poke(memAddress+128, 16368);
		do Memory.poke(memAddress+160, 8176);
		do Memory.poke(memAddress+192, 15480);
		do Memory.poke(memAddress+224, 15480);
		do Memory.poke(memAddress+256, 15480);
		do Memory.poke(memAddress+288, 8176);
		do Memory.poke(memAddress+320, 8176);
		do Memory.poke(memAddress+352, 4064);
		do Memory.poke(memAddress+384, 896);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 3);
		do Memory.poke(memAddress+32, 1);
		do Memory.poke(memAddress+64, 0);
		do Memory.poke(memAddress+96, 0);
		do Memory.poke(memAddress+128, 0);
		do Memory.poke(memAddress+160, 0);
		do Memory.poke(memAddress+192, 0);
		do Memory.poke(memAddress+224, 0);
		do Memory.poke(memAddress+256, 0);
		do Memory.poke(memAddress+288, 0);
		do Memory.poke(memAddress+320, 0);
		do Memory.poke(memAddress+352, 0);
		do Memory.poke(memAddress+384, 0);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		return;
	}
	
	function void drawCoin (int i) {
		var int memAddress;
		var int r;
		var int c;
		let r = i / 8;
		let c = i - ((i / 8) * 8);
		let memAddress = 16384 + (r * 32 * 32 + (c * 2) + 16);
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, 0);
		do Memory.poke(memAddress+96, -8192);
		do Memory.poke(memAddress+128, -2048);
		do Memory.poke(memAddress+160, 32256);
		do Memory.poke(memAddress+192, 16128);
		do Memory.poke(memAddress+224, 8128);
		do Memory.poke(memAddress+256, -28736);
		do Memory.poke(memAddress+288, -30752);
		do Memory.poke(memAddress+320, -15376);
		do Memory.poke(memAddress+352, -3600);
		do Memory.poke(memAddress+384, 12528);
		do Memory.poke(memAddress+416, 12408);
		do Memory.poke(memAddress+448, 28728);
		do Memory.poke(memAddress+480, -8168);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, 0);
		do Memory.poke(memAddress+96, 7);
		do Memory.poke(memAddress+128, 31);
		do Memory.poke(memAddress+160, 126);
		do Memory.poke(memAddress+192, 252);
		do Memory.poke(memAddress+224, 1016);
		do Memory.poke(memAddress+256, 1009);
		do Memory.poke(memAddress+288, 2017);
		do Memory.poke(memAddress+320, 4035);
		do Memory.poke(memAddress+352, 3983);
		do Memory.poke(memAddress+384, 3852);
		do Memory.poke(memAddress+416, 7692);
		do Memory.poke(memAddress+448, 7168);
		do Memory.poke(memAddress+480, 6147);
		let memAddress = memAddress + 511;
		do Memory.poke(memAddress+0, -16360);
		do Memory.poke(memAddress+32, 56);
		do Memory.poke(memAddress+64, 12408);
		do Memory.poke(memAddress+96, 12528);
		do Memory.poke(memAddress+128, -3600);
		do Memory.poke(memAddress+160, -15376);
		do Memory.poke(memAddress+192, -30752);
		do Memory.poke(memAddress+224, -28736);
		do Memory.poke(memAddress+256, 8128);
		do Memory.poke(memAddress+288, 16128);
		do Memory.poke(memAddress+320, 32256);
		do Memory.poke(memAddress+352, -2048);
		do Memory.poke(memAddress+384, -8192);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 6151);
		do Memory.poke(memAddress+32, 7182);
		do Memory.poke(memAddress+64, 7692);
		do Memory.poke(memAddress+96, 3852);
		do Memory.poke(memAddress+128, 3983);
		do Memory.poke(memAddress+160, 4035);
		do Memory.poke(memAddress+192, 2017);
		do Memory.poke(memAddress+224, 1009);
		do Memory.poke(memAddress+256, 1016);
		do Memory.poke(memAddress+288, 252);
		do Memory.poke(memAddress+320, 126);
		do Memory.poke(memAddress+352, 31);
		do Memory.poke(memAddress+384, 7);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		return;
	}
	
	function void drawWS (int i) {
		var int memAddress;
		var int r;
		var int c;
		let r = i / 8;
		let c = i - ((i / 8) * 8);
		let memAddress = 16384 + (r * 32 * 32 + (c * 2) + 16);
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, 0);
		do Memory.poke(memAddress+96, 0);
		do Memory.poke(memAddress+128, 0);
		do Memory.poke(memAddress+160, 0);
		do Memory.poke(memAddress+192, -8192);
		do Memory.poke(memAddress+224, -1024);
		do Memory.poke(memAddress+256, 7936);
		do Memory.poke(memAddress+288, 960);
		do Memory.poke(memAddress+320, 224);
		do Memory.poke(memAddress+352, 112);
		do Memory.poke(memAddress+384, 56);
		do Memory.poke(memAddress+416, 3608);
		do Memory.poke(memAddress+448, 5900);
		do Memory.poke(memAddress+480, 16268);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, 0);
		do Memory.poke(memAddress+96, 0);
		do Memory.poke(memAddress+128, 0);
		do Memory.poke(memAddress+160, 0);
		do Memory.poke(memAddress+192, 7);
		do Memory.poke(memAddress+224, 63);
		do Memory.poke(memAddress+256, 248);
		do Memory.poke(memAddress+288, 960);
		do Memory.poke(memAddress+320, 1792);
		do Memory.poke(memAddress+352, 3584);
		do Memory.poke(memAddress+384, 7168);
		do Memory.poke(memAddress+416, 6256);
		do Memory.poke(memAddress+448, 12472);
		do Memory.poke(memAddress+480, 12796);
		let memAddress = memAddress + 511;
		do Memory.poke(memAddress+0, 16268);
		do Memory.poke(memAddress+32, 7948);
		do Memory.poke(memAddress+64, 3608);
		do Memory.poke(memAddress+96, 56);
		do Memory.poke(memAddress+128, 112);
		do Memory.poke(memAddress+160, 224);
		do Memory.poke(memAddress+192, 960);
		do Memory.poke(memAddress+224, 7936);
		do Memory.poke(memAddress+256, -1024);
		do Memory.poke(memAddress+288, -8192);
		do Memory.poke(memAddress+320, 0);
		do Memory.poke(memAddress+352, 0);
		do Memory.poke(memAddress+384, 0);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 12796);
		do Memory.poke(memAddress+32, 12536);
		do Memory.poke(memAddress+64, 6256);
		do Memory.poke(memAddress+96, 7168);
		do Memory.poke(memAddress+128, 3584);
		do Memory.poke(memAddress+160, 1792);
		do Memory.poke(memAddress+192, 960);
		do Memory.poke(memAddress+224, 248);
		do Memory.poke(memAddress+256, 63);
		do Memory.poke(memAddress+288, 7);
		do Memory.poke(memAddress+320, 0);
		do Memory.poke(memAddress+352, 0);
		do Memory.poke(memAddress+384, 0);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		return;
	}
	
	function void drawBS (int i) {
		var int memAddress;
		var int r;
		var int c;
		let r = i / 8;
		let c = i - ((i / 8) * 8);
		let memAddress = 16384 + (r * 32 * 32 + (c * 2) + 16);
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, 0);
		do Memory.poke(memAddress+96, 0);
		do Memory.poke(memAddress+128, 0);
		do Memory.poke(memAddress+160, 0);
		do Memory.poke(memAddress+192, -8192);
		do Memory.poke(memAddress+224, -1024);
		do Memory.poke(memAddress+256, -256);
		do Memory.poke(memAddress+288, -64);
		do Memory.poke(memAddress+320, -32);
		do Memory.poke(memAddress+352, -16);
		do Memory.poke(memAddress+384, -8);
		do Memory.poke(memAddress+416, -3592);
		do Memory.poke(memAddress+448, -4356);
		do Memory.poke(memAddress+480, -10372);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, 0);
		do Memory.poke(memAddress+96, 0);
		do Memory.poke(memAddress+128, 0);
		do Memory.poke(memAddress+160, 0);
		do Memory.poke(memAddress+192, 7);
		do Memory.poke(memAddress+224, 63);
		do Memory.poke(memAddress+256, 255);
		do Memory.poke(memAddress+288, 1023);
		do Memory.poke(memAddress+320, 2047);
		do Memory.poke(memAddress+352, 4095);
		do Memory.poke(memAddress+384, 8191);
		do Memory.poke(memAddress+416, 8079);
		do Memory.poke(memAddress+448, 16247);
		do Memory.poke(memAddress+480, 16059);
		let memAddress = memAddress + 511;
		do Memory.poke(memAddress+0, -8324);
		do Memory.poke(memAddress+32, -4356);
		do Memory.poke(memAddress+64, -3592);
		do Memory.poke(memAddress+96, -8);
		do Memory.poke(memAddress+128, -16);
		do Memory.poke(memAddress+160, -32);
		do Memory.poke(memAddress+192, -64);
		do Memory.poke(memAddress+224, -256);
		do Memory.poke(memAddress+256, -1024);
		do Memory.poke(memAddress+288, -8192);
		do Memory.poke(memAddress+320, 0);
		do Memory.poke(memAddress+352, 0);
		do Memory.poke(memAddress+384, 0);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 16123);
		do Memory.poke(memAddress+32, 16247);
		do Memory.poke(memAddress+64, 8079);
		do Memory.poke(memAddress+96, 8191);
		do Memory.poke(memAddress+128, 4095);
		do Memory.poke(memAddress+160, 2047);
		do Memory.poke(memAddress+192, 1023);
		do Memory.poke(memAddress+224, 255);
		do Memory.poke(memAddress+256, 63);
		do Memory.poke(memAddress+288, 7);
		do Memory.poke(memAddress+320, 0);
		do Memory.poke(memAddress+352, 0);
		do Memory.poke(memAddress+384, 0);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		return;
	}
	
	function void drawSB (int i) {
		var int memAddress;
		var int r;
		var int c;
		let r = i / 8;
		let c = i - ((i / 8) * 8);
		let memAddress = 16384 + (r * 32 * 32 + (c * 2) + 16);
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, 0);
		do Memory.poke(memAddress+96, 0);
		do Memory.poke(memAddress+128, 0);
		do Memory.poke(memAddress+160, 3072);
		do Memory.poke(memAddress+192, 1536);
		do Memory.poke(memAddress+224, 4864);
		do Memory.poke(memAddress+256, 8960);
		do Memory.poke(memAddress+288, 9088);
		do Memory.poke(memAddress+320, -15488);
		do Memory.poke(memAddress+352, -22592);
		do Memory.poke(memAddress+384, -22592);
		do Memory.poke(memAddress+416, -6208);
		do Memory.poke(memAddress+448, -32);
		do Memory.poke(memAddress+480, -32);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, 0);
		do Memory.poke(memAddress+96, 0);
		do Memory.poke(memAddress+128, 0);
		do Memory.poke(memAddress+160, 48);
		do Memory.poke(memAddress+192, 96);
		do Memory.poke(memAddress+224, 200);
		do Memory.poke(memAddress+256, 196);
		do Memory.poke(memAddress+288, 452);
		do Memory.poke(memAddress+320, 451);
		do Memory.poke(memAddress+352, 997);
		do Memory.poke(memAddress+384, 997);
		do Memory.poke(memAddress+416, 999);
		do Memory.poke(memAddress+448, 2047);
		do Memory.poke(memAddress+480, 2047);
		let memAddress = memAddress + 511;
		do Memory.poke(memAddress+0, -32);
		do Memory.poke(memAddress+32, -32);
		do Memory.poke(memAddress+64, -2112);
		do Memory.poke(memAddress+96, -6208);
		do Memory.poke(memAddress+128, -14400);
		do Memory.poke(memAddress+160, -31872);
		do Memory.poke(memAddress+192, -31872);
		do Memory.poke(memAddress+224, -32000);
		do Memory.poke(memAddress+256, 768);
		do Memory.poke(memAddress+288, 1536);
		do Memory.poke(memAddress+320, 1024);
		do Memory.poke(memAddress+352, 0);
		do Memory.poke(memAddress+384, 0);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 2047);
		do Memory.poke(memAddress+32, 2047);
		do Memory.poke(memAddress+64, 1007);
		do Memory.poke(memAddress+96, 999);
		do Memory.poke(memAddress+128, 995);
		do Memory.poke(memAddress+160, 449);
		do Memory.poke(memAddress+192, 449);
		do Memory.poke(memAddress+224, 193);
		do Memory.poke(memAddress+256, 192);
		do Memory.poke(memAddress+288, 96);
		do Memory.poke(memAddress+320, 32);
		do Memory.poke(memAddress+352, 0);
		do Memory.poke(memAddress+384, 0);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		return;
	}
	
	function void drawLB (int i) {
		var int memAddress;
		var int r;
		var int c;
		let r = i / 8;
		let c = i - ((i / 8) * 8);
		let memAddress = 16384 + (r * 32 * 32 + (c * 2) + 16);
		do Memory.poke(memAddress+0, 512);
		do Memory.poke(memAddress+32, 768);
		do Memory.poke(memAddress+64, 9088);
		do Memory.poke(memAddress+96, 25536);
		do Memory.poke(memAddress+128, 18400);
		do Memory.poke(memAddress+160, -14544);
		do Memory.poke(memAddress+192, -6216);
		do Memory.poke(memAddress+224, -20840);
		do Memory.poke(memAddress+256, -4404);
		do Memory.poke(memAddress+288, -12724);
		do Memory.poke(memAddress+320, -8634);
		do Memory.poke(memAddress+352, -1434);
		do Memory.poke(memAddress+384, -1246);
		do Memory.poke(memAddress+416, -3789);
		do Memory.poke(memAddress+448, -3823);
		do Memory.poke(memAddress+480, -1775);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 64);
		do Memory.poke(memAddress+32, 192);
		do Memory.poke(memAddress+64, 452);
		do Memory.poke(memAddress+96, 966);
		do Memory.poke(memAddress+128, 2018);
		do Memory.poke(memAddress+160, 3299);
		do Memory.poke(memAddress+192, 7655);
		do Memory.poke(memAddress+224, 6517);
		do Memory.poke(memAddress+256, 13175);
		do Memory.poke(memAddress+288, 12915);
		do Memory.poke(memAddress+320, 25211);
		do Memory.poke(memAddress+352, 26207);
		do Memory.poke(memAddress+384, 17631);
		do Memory.poke(memAddress+416, -13169);
		do Memory.poke(memAddress+448, -30577);
		do Memory.poke(memAddress+480, -30561);
		let memAddress = memAddress + 511;
		do Memory.poke(memAddress+0, -1647);
		do Memory.poke(memAddress+32, -879);
		do Memory.poke(memAddress+64, -357);
		do Memory.poke(memAddress+96, -10502);
		do Memory.poke(memAddress+128, -15478);
		do Memory.poke(memAddress+160, -16118);
		do Memory.poke(memAddress+192, -16118);
		do Memory.poke(memAddress+224, -16114);
		do Memory.poke(memAddress+256, -32764);
		do Memory.poke(memAddress+288, -32764);
		do Memory.poke(memAddress+320, -32764);
		do Memory.poke(memAddress+352, -32764);
		do Memory.poke(memAddress+384, 4);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, -30305);
		do Memory.poke(memAddress+32, -30401);
		do Memory.poke(memAddress+64, -9857);
		do Memory.poke(memAddress+96, 24427);
		do Memory.poke(memAddress+128, 20931);
		do Memory.poke(memAddress+160, 20611);
		do Memory.poke(memAddress+192, 20611);
		do Memory.poke(memAddress+224, 28803);
		do Memory.poke(memAddress+256, 8193);
		do Memory.poke(memAddress+288, 8193);
		do Memory.poke(memAddress+320, 8193);
		do Memory.poke(memAddress+352, 8193);
		do Memory.poke(memAddress+384, 8192);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		return;
	}
	
	function void drawSK (int i) {
		var int memAddress;
		var int r;
		var int c;
		let r = i / 8;
		let c = i - ((i / 8) * 8);
		let memAddress = 16384 + (r * 32 * 32 + (c * 2) + 16);
		do Memory.poke(memAddress+0, -4096);
		do Memory.poke(memAddress+32, 7168);
		do Memory.poke(memAddress+64, 1536);
		do Memory.poke(memAddress+96, 768);
		do Memory.poke(memAddress+128, 384);
		do Memory.poke(memAddress+160, 128);
		do Memory.poke(memAddress+192, 64);
		do Memory.poke(memAddress+224, 24640);
		do Memory.poke(memAddress+256, 30784);
		do Memory.poke(memAddress+288, 15488);
		do Memory.poke(memAddress+320, 6272);
		do Memory.poke(memAddress+352, 256);
		do Memory.poke(memAddress+384, 1536);
		do Memory.poke(memAddress+416, 14336);
		do Memory.poke(memAddress+448, -10276);
		do Memory.poke(memAddress+480, -9098);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 15);
		do Memory.poke(memAddress+32, 56);
		do Memory.poke(memAddress+64, 96);
		do Memory.poke(memAddress+96, 192);
		do Memory.poke(memAddress+128, 384);
		do Memory.poke(memAddress+160, 256);
		do Memory.poke(memAddress+192, 512);
		do Memory.poke(memAddress+224, 518);
		do Memory.poke(memAddress+256, 542);
		do Memory.poke(memAddress+288, 316);
		do Memory.poke(memAddress+320, 280);
		do Memory.poke(memAddress+352, 128);
		do Memory.poke(memAddress+384, 96);
		do Memory.poke(memAddress+416, 28);
		do Memory.poke(memAddress+448, 15339);
		do Memory.poke(memAddress+480, 28219);
		let memAddress = memAddress + 511;
		do Memory.poke(memAddress+0, 12386);
		do Memory.poke(memAddress+32, -7242);
		do Memory.poke(memAddress+64, 32276);
		do Memory.poke(memAddress+96, 532);
		do Memory.poke(memAddress+128, 31764);
		do Memory.poke(memAddress+160, 8);
		do Memory.poke(memAddress+192, -17388);
		do Memory.poke(memAddress+224, -32760);
		do Memory.poke(memAddress+256, -25600);
		do Memory.poke(memAddress+288, 25088);
		do Memory.poke(memAddress+320, 2560);
		do Memory.poke(memAddress+352, 11264);
		do Memory.poke(memAddress+384, 10240);
		do Memory.poke(memAddress+416, 12032);
		do Memory.poke(memAddress+448, 16512);
		do Memory.poke(memAddress+480, 32640);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 17932);
		do Memory.poke(memAddress+32, 28103);
		do Memory.poke(memAddress+64, 10366);
		do Memory.poke(memAddress+96, 10304);
		do Memory.poke(memAddress+128, 10302);
		do Memory.poke(memAddress+160, 4096);
		do Memory.poke(memAddress+192, 10301);
		do Memory.poke(memAddress+224, 4097);
		do Memory.poke(memAddress+256, 57);
		do Memory.poke(memAddress+288, 70);
		do Memory.poke(memAddress+320, 80);
		do Memory.poke(memAddress+352, 52);
		do Memory.poke(memAddress+384, 20);
		do Memory.poke(memAddress+416, 244);
		do Memory.poke(memAddress+448, 258);
		do Memory.poke(memAddress+480, 510);
		return;
	}
	
	function void drawWM (int i) {
		var int memAddress;
		var int r;
		var int c;
		let r = i / 8;
		let c = i - ((i / 8) * 8);
		let memAddress = 16384 + (r * 32 * 32 + (c * 2) + 16);
		do Memory.poke(memAddress+0, -16384);
		do Memory.poke(memAddress+32, 8192);
		do Memory.poke(memAddress+64, -12288);
		do Memory.poke(memAddress+96, -6144);
		do Memory.poke(memAddress+128, -3072);
		do Memory.poke(memAddress+160, -17920);
		do Memory.poke(memAddress+192, -17920);
		do Memory.poke(memAddress+224, -1536);
		do Memory.poke(memAddress+256, -3584);
		do Memory.poke(memAddress+288, -3072);
		do Memory.poke(memAddress+320, -7156);
		do Memory.poke(memAddress+352, -15342);
		do Memory.poke(memAddress+384, -30669);
		do Memory.poke(memAddress+416, -30593);
		do Memory.poke(memAddress+448, 2271);
		do Memory.poke(memAddress+480, 1821);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 3);
		do Memory.poke(memAddress+32, 4);
		do Memory.poke(memAddress+64, 11);
		do Memory.poke(memAddress+96, 23);
		do Memory.poke(memAddress+128, 47);
		do Memory.poke(memAddress+160, 93);
		do Memory.poke(memAddress+192, 93);
		do Memory.poke(memAddress+224, 95);
		do Memory.poke(memAddress+256, 79);
		do Memory.poke(memAddress+288, 47);
		do Memory.poke(memAddress+320, 12327);
		do Memory.poke(memAddress+352, 18467);
		do Memory.poke(memAddress+384, -13295);
		do Memory.poke(memAddress+416, -496);
		do Memory.poke(memAddress+448, -1263);
		do Memory.poke(memAddress+480, -18207);
		let memAddress = memAddress + 511;
		do Memory.poke(memAddress+0, 13);
		do Memory.poke(memAddress+32, 229);
		do Memory.poke(memAddress+64, 277);
		do Memory.poke(memAddress+96, 529);
		do Memory.poke(memAddress+128, 522);
		do Memory.poke(memAddress+160, 266);
		do Memory.poke(memAddress+192, 132);
		do Memory.poke(memAddress+224, 64);
		do Memory.poke(memAddress+256, 32);
		do Memory.poke(memAddress+288, 16);
		do Memory.poke(memAddress+320, 8);
		do Memory.poke(memAddress+352, 4);
		do Memory.poke(memAddress+384, 2);
		do Memory.poke(memAddress+416, 2);
		do Memory.poke(memAddress+448, 12);
		do Memory.poke(memAddress+480, -8);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, -20478);
		do Memory.poke(memAddress+32, -22782);
		do Memory.poke(memAddress+64, -22398);
		do Memory.poke(memAddress+96, -30652);
		do Memory.poke(memAddress+128, 20548);
		do Memory.poke(memAddress+160, 20612);
		do Memory.poke(memAddress+192, 8456);
		do Memory.poke(memAddress+224, 520);
		do Memory.poke(memAddress+256, 1032);
		do Memory.poke(memAddress+288, 2056);
		do Memory.poke(memAddress+320, 4112);
		do Memory.poke(memAddress+352, 8208);
		do Memory.poke(memAddress+384, 16400);
		do Memory.poke(memAddress+416, 16400);
		do Memory.poke(memAddress+448, 12304);
		do Memory.poke(memAddress+480, 8191);
		return;
	}
	
	function void drawBM (int i) {
		var int memAddress;
		var int r;
		var int c;
		let r = i / 8;
		let c = i - ((i / 8) * 8);
		let memAddress = 16384 + (r * 32 * 32 + (c * 2) + 16);
		do Memory.poke(memAddress+0, -16384);
		do Memory.poke(memAddress+32, -8192);
		do Memory.poke(memAddress+64, 12288);
		do Memory.poke(memAddress+96, 6144);
		do Memory.poke(memAddress+128, 3072);
		do Memory.poke(memAddress+160, 17920);
		do Memory.poke(memAddress+192, 17920);
		do Memory.poke(memAddress+224, 1536);
		do Memory.poke(memAddress+256, 3584);
		do Memory.poke(memAddress+288, 3072);
		do Memory.poke(memAddress+320, 7180);
		do Memory.poke(memAddress+352, 15390);
		do Memory.poke(memAddress+384, 30765);
		do Memory.poke(memAddress+416, 30817);
		do Memory.poke(memAddress+448, -1823);
		do Memory.poke(memAddress+480, -29);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 3);
		do Memory.poke(memAddress+32, 7);
		do Memory.poke(memAddress+64, 12);
		do Memory.poke(memAddress+96, 24);
		do Memory.poke(memAddress+128, 48);
		do Memory.poke(memAddress+160, 98);
		do Memory.poke(memAddress+192, 98);
		do Memory.poke(memAddress+224, 96);
		do Memory.poke(memAddress+256, 112);
		do Memory.poke(memAddress+288, 48);
		do Memory.poke(memAddress+320, 12344);
		do Memory.poke(memAddress+352, 30780);
		do Memory.poke(memAddress+384, -19426);
		do Memory.poke(memAddress+416, -31201);
		do Memory.poke(memAddress+448, -30946);
		do Memory.poke(memAddress+480, -14338);
		let memAddress = memAddress + 511;
		do Memory.poke(memAddress+0, -13);
		do Memory.poke(memAddress+32, -5);
		do Memory.poke(memAddress+64, -229);
		do Memory.poke(memAddress+96, -481);
		do Memory.poke(memAddress+128, -498);
		do Memory.poke(memAddress+160, -242);
		do Memory.poke(memAddress+192, -124);
		do Memory.poke(memAddress+224, -64);
		do Memory.poke(memAddress+256, -32);
		do Memory.poke(memAddress+288, -16);
		do Memory.poke(memAddress+320, -8);
		do Memory.poke(memAddress+352, -4);
		do Memory.poke(memAddress+384, -2);
		do Memory.poke(memAddress+416, -2);
		do Memory.poke(memAddress+448, -4);
		do Memory.poke(memAddress+480, -8);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, -12291);
		do Memory.poke(memAddress+32, -8195);
		do Memory.poke(memAddress+64, -9987);
		do Memory.poke(memAddress+96, -1925);
		do Memory.poke(memAddress+128, 28795);
		do Memory.poke(memAddress+160, 28923);
		do Memory.poke(memAddress+192, 8695);
		do Memory.poke(memAddress+224, 1015);
		do Memory.poke(memAddress+256, 2039);
		do Memory.poke(memAddress+288, 4087);
		do Memory.poke(memAddress+320, 8175);
		do Memory.poke(memAddress+352, 16367);
		do Memory.poke(memAddress+384, 32751);
		do Memory.poke(memAddress+416, 32751);
		do Memory.poke(memAddress+448, 16367);
		do Memory.poke(memAddress+480, 8191);
		return;
	}
	
	function void drawWG (int i) {
		var int memAddress;
		var int r;
		var int c;
		let r = i / 8;
		let c = i - ((i / 8) * 8);
		let memAddress = 16384 + (r * 32 * 32 + (c * 2) + 16);
		do Memory.poke(memAddress+0, -32767 - 1);
		do Memory.poke(memAddress+32, -16384);
		do Memory.poke(memAddress+64, -4096);
		do Memory.poke(memAddress+96, 6144);
		do Memory.poke(memAddress+128, 2048);
		do Memory.poke(memAddress+160, 2048);
		do Memory.poke(memAddress+192, 2048);
		do Memory.poke(memAddress+224, -2048);
		do Memory.poke(memAddress+256, -28672);
		do Memory.poke(memAddress+288, -2048);
		do Memory.poke(memAddress+320, 2048);
		do Memory.poke(memAddress+352, 18432);
		do Memory.poke(memAddress+384, 22776);
		do Memory.poke(memAddress+416, -3324);
		do Memory.poke(memAddress+448, 3842);
		do Memory.poke(memAddress+480, -3967);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 1);
		do Memory.poke(memAddress+32, 3);
		do Memory.poke(memAddress+64, 15);
		do Memory.poke(memAddress+96, 24);
		do Memory.poke(memAddress+128, 16);
		do Memory.poke(memAddress+160, 16);
		do Memory.poke(memAddress+192, 16);
		do Memory.poke(memAddress+224, 31);
		do Memory.poke(memAddress+256, 9);
		do Memory.poke(memAddress+288, 799);
		do Memory.poke(memAddress+320, 4048);
		do Memory.poke(memAddress+352, 13106);
		do Memory.poke(memAddress+384, -15602);
		do Memory.poke(memAddress+416, -1);
		do Memory.poke(memAddress+448, -4);
		do Memory.poke(memAddress+480, 17167);
		let memAddress = memAddress + 511;
		do Memory.poke(memAddress+0, 129);
		do Memory.poke(memAddress+32, 65);
		do Memory.poke(memAddress+64, 66);
		do Memory.poke(memAddress+96, 98);
		do Memory.poke(memAddress+128, -32612);
		do Memory.poke(memAddress+160, 16674);
		do Memory.poke(memAddress+192, 9762);
		do Memory.poke(memAddress+224, 14876);
		do Memory.poke(memAddress+256, 540);
		do Memory.poke(memAddress+288, 546);
		do Memory.poke(memAddress+320, -15838);
		do Memory.poke(memAddress+352, 15388);
		do Memory.poke(memAddress+384, 16896);
		do Memory.poke(memAddress+416, 16896);
		do Memory.poke(memAddress+448, 32512);
		do Memory.poke(memAddress+480, 32640);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 17160);
		do Memory.poke(memAddress+32, 8976);
		do Memory.poke(memAddress+64, 16368);
		do Memory.poke(memAddress+96, 8160);
		do Memory.poke(memAddress+128, 7009);
		do Memory.poke(memAddress+160, 2882);
		do Memory.poke(memAddress+192, 2020);
		do Memory.poke(memAddress+224, 860);
		do Memory.poke(memAddress+256, 64);
		do Memory.poke(memAddress+288, 64);
		do Memory.poke(memAddress+320, 67);
		do Memory.poke(memAddress+352, 60);
		do Memory.poke(memAddress+384, 66);
		do Memory.poke(memAddress+416, 66);
		do Memory.poke(memAddress+448, 254);
		do Memory.poke(memAddress+480, 510);
		return;
	}
	
	function void drawBG (int i) {
		var int memAddress;
		var int r;
		var int c;
		let r = i / 8;
		let c = i - ((i / 8) * 8);
		let memAddress = 16384 + (r * 32 * 32 + (c * 2) + 16);
		do Memory.poke(memAddress+0, -32767 - 1);
		do Memory.poke(memAddress+32, -16384);
		do Memory.poke(memAddress+64, -4096);
		do Memory.poke(memAddress+96, -2048);
		do Memory.poke(memAddress+128, -2048);
		do Memory.poke(memAddress+160, -2048);
		do Memory.poke(memAddress+192, -2048);
		do Memory.poke(memAddress+224, -2048);
		do Memory.poke(memAddress+256, 24576);
		do Memory.poke(memAddress+288, -2048);
		do Memory.poke(memAddress+320, -2048);
		do Memory.poke(memAddress+352, -2048);
		do Memory.poke(memAddress+384, -1800);
		do Memory.poke(memAddress+416, -3076);
		do Memory.poke(memAddress+448, 3326);
		do Memory.poke(memAddress+480, -129);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 1);
		do Memory.poke(memAddress+32, 3);
		do Memory.poke(memAddress+64, 15);
		do Memory.poke(memAddress+96, 27);
		do Memory.poke(memAddress+128, 27);
		do Memory.poke(memAddress+160, 31);
		do Memory.poke(memAddress+192, 31);
		do Memory.poke(memAddress+224, 31);
		do Memory.poke(memAddress+256, 6);
		do Memory.poke(memAddress+288, 799);
		do Memory.poke(memAddress+320, 4095);
		do Memory.poke(memAddress+352, 13087);
		do Memory.poke(memAddress+384, -15601);
		do Memory.poke(memAddress+416, -1);
		do Memory.poke(memAddress+448, -4);
		do Memory.poke(memAddress+480, 17167);
		let memAddress = memAddress + 511;
		do Memory.poke(memAddress+0, -129);
		do Memory.poke(memAddress+32, -65);
		do Memory.poke(memAddress+64, -66);
		do Memory.poke(memAddress+96, -66);
		do Memory.poke(memAddress+128, 32668);
		do Memory.poke(memAddress+160, -16578);
		do Memory.poke(memAddress+192, -9666);
		do Memory.poke(memAddress+224, -14820);
		do Memory.poke(memAddress+256, -484);
		do Memory.poke(memAddress+288, -478);
		do Memory.poke(memAddress+320, -478);
		do Memory.poke(memAddress+352, 15388);
		do Memory.poke(memAddress+384, 32256);
		do Memory.poke(memAddress+416, 32256);
		do Memory.poke(memAddress+448, 17152);
		do Memory.poke(memAddress+480, 32640);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 17167);
		do Memory.poke(memAddress+32, 8991);
		do Memory.poke(memAddress+64, 16383);
		do Memory.poke(memAddress+96, 8191);
		do Memory.poke(memAddress+128, 7038);
		do Memory.poke(memAddress+160, 2941);
		do Memory.poke(memAddress+192, 2011);
		do Memory.poke(memAddress+224, 867);
		do Memory.poke(memAddress+256, 127);
		do Memory.poke(memAddress+288, 127);
		do Memory.poke(memAddress+320, 127);
		do Memory.poke(memAddress+352, 60);
		do Memory.poke(memAddress+384, 126);
		do Memory.poke(memAddress+416, 126);
		do Memory.poke(memAddress+448, 194);
		do Memory.poke(memAddress+480, 510);
		return;
	}
	
	function void drawDEVIL (int i) {
		var int memAddress;
		var int r;
		var int c;
		let r = i / 8;
		let c = i - ((i / 8) * 8);
		let memAddress = 16384 + (r * 32 * 32 + (c * 2) + 16);
		do Memory.poke(memAddress+0, -4096);
		do Memory.poke(memAddress+32, 7168);
		do Memory.poke(memAddress+64, 1536);
		do Memory.poke(memAddress+96, 768);
		do Memory.poke(memAddress+128, 384);
		do Memory.poke(memAddress+160, 128);
		do Memory.poke(memAddress+192, 64);
		do Memory.poke(memAddress+224, 24640);
		do Memory.poke(memAddress+256, 30784);
		do Memory.poke(memAddress+288, 15488);
		do Memory.poke(memAddress+320, 6272);
		do Memory.poke(memAddress+352, 256);
		do Memory.poke(memAddress+384, 1536);
		do Memory.poke(memAddress+416, 14336);
		do Memory.poke(memAddress+448, -10274);
		do Memory.poke(memAddress+480, -9101);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, 15);
		do Memory.poke(memAddress+32, 56);
		do Memory.poke(memAddress+64, 96);
		do Memory.poke(memAddress+96, 192);
		do Memory.poke(memAddress+128, 384);
		do Memory.poke(memAddress+160, 256);
		do Memory.poke(memAddress+192, 512);
		do Memory.poke(memAddress+224, 518);
		do Memory.poke(memAddress+256, 542);
		do Memory.poke(memAddress+288, 316);
		do Memory.poke(memAddress+320, 280);
		do Memory.poke(memAddress+352, 128);
		do Memory.poke(memAddress+384, 96);
		do Memory.poke(memAddress+416, 28);
		do Memory.poke(memAddress+448, 31723);
		do Memory.poke(memAddress+480, -12741);
		let memAddress = memAddress + 511;
		do Memory.poke(memAddress+0, 14433);
		do Memory.poke(memAddress+32, -7949);
		do Memory.poke(memAddress+64, -1058);
		do Memory.poke(memAddress+96, -418);
		do Memory.poke(memAddress+128, -162);
		do Memory.poke(memAddress+160, -180);
		do Memory.poke(memAddress+192, 32594);
		do Memory.poke(memAddress+224, 24908);
		do Memory.poke(memAddress+256, 25376);
		do Memory.poke(memAddress+288, -480);
		do Memory.poke(memAddress+320, -480);
		do Memory.poke(memAddress+352, -32);
		do Memory.poke(memAddress+384, 31744);
		do Memory.poke(memAddress+416, 32512);
		do Memory.poke(memAddress+448, 32640);
		do Memory.poke(memAddress+480, 32640);
		let memAddress = memAddress + 1;
		do Memory.poke(memAddress+0, -31204);
		do Memory.poke(memAddress+32, -12537);
		do Memory.poke(memAddress+64, 31711);
		do Memory.poke(memAddress+96, 31359);
		do Memory.poke(memAddress+128, 31487);
		do Memory.poke(memAddress+160, 13055);
		do Memory.poke(memAddress+192, 19198);
		do Memory.poke(memAddress+224, 12934);
		do Memory.poke(memAddress+256, 1222);
		do Memory.poke(memAddress+288, 1151);
		do Memory.poke(memAddress+320, 1151);
		do Memory.poke(memAddress+352, 2047);
		do Memory.poke(memAddress+384, 62);
		do Memory.poke(memAddress+416, 254);
		do Memory.poke(memAddress+448, 510);
		do Memory.poke(memAddress+480, 510);
		return;
	}
	
	/**the hero has 4 positions*/
	function void drawHero (int i, int pos) {
		var int memAddress;
		var int r;
		var int c;
		let r = i / 8;
		let c = i - ((i / 8) * 8);
		let memAddress = 16384 + (r * 32 * 32 + (c * 2) + 16);
		if (pos = 1) {
			do Memory.poke(memAddress+0, -4096);
			do Memory.poke(memAddress+32, -1024);
			do Memory.poke(memAddress+64, -512);
			do Memory.poke(memAddress+96, -256);
			do Memory.poke(memAddress+128, -128);
			do Memory.poke(memAddress+160, -128);
			do Memory.poke(memAddress+192, -64);
			do Memory.poke(memAddress+224, -64);
			do Memory.poke(memAddress+256, -64);
			do Memory.poke(memAddress+288, -17536);
			do Memory.poke(memAddress+320, 13184);
			do Memory.poke(memAddress+352, 8448);
			do Memory.poke(memAddress+384, 28928);
			do Memory.poke(memAddress+416, 29184);
			do Memory.poke(memAddress+448, 2014);
			do Memory.poke(memAddress+480, 8179);
			let memAddress = memAddress + 1;
			do Memory.poke(memAddress+0, 15);
			do Memory.poke(memAddress+32, 63);
			do Memory.poke(memAddress+64, 127);
			do Memory.poke(memAddress+96, 255);
			do Memory.poke(memAddress+128, 511);
			do Memory.poke(memAddress+160, 511);
			do Memory.poke(memAddress+192, 1023);
			do Memory.poke(memAddress+224, 1023);
			do Memory.poke(memAddress+256, 1023);
			do Memory.poke(memAddress+288, 511);
			do Memory.poke(memAddress+320, 475);
			do Memory.poke(memAddress+352, 146);
			do Memory.poke(memAddress+384, 142);
			do Memory.poke(memAddress+416, 78);
			do Memory.poke(memAddress+448, 31712);
			do Memory.poke(memAddress+480, -12296);
			let memAddress = memAddress + 511;
			do Memory.poke(memAddress+0, -31);
			do Memory.poke(memAddress+32, 32755);
			do Memory.poke(memAddress+64, 16350);
			do Memory.poke(memAddress+96, 3678);
			do Memory.poke(memAddress+128, 350);
			do Memory.poke(memAddress+160, -32436);
			do Memory.poke(memAddress+192, 24914);
			do Memory.poke(memAddress+224, 32588);
			do Memory.poke(memAddress+256, 32544);
			do Memory.poke(memAddress+288, -32480);
			do Memory.poke(memAddress+320, 288);
			do Memory.poke(memAddress+352, 992);
			do Memory.poke(memAddress+384, -15872);
			do Memory.poke(memAddress+416, 17280);
			do Memory.poke(memAddress+448, 32704);
			do Memory.poke(memAddress+480, 32704);
			let memAddress = memAddress + 1;
			do Memory.poke(memAddress+0, -30721);
			do Memory.poke(memAddress+32, -12290);
			do Memory.poke(memAddress+64, 31740);
			do Memory.poke(memAddress+96, 31344);
			do Memory.poke(memAddress+128, 31360);
			do Memory.poke(memAddress+160, 12929);
			do Memory.poke(memAddress+192, 19078);
			do Memory.poke(memAddress+224, 13054);
			do Memory.poke(memAddress+256, 1278);
			do Memory.poke(memAddress+288, 1153);
			do Memory.poke(memAddress+320, 1152);
			do Memory.poke(memAddress+352, 1984);
			do Memory.poke(memAddress+384, 67);
			do Memory.poke(memAddress+416, 450);
			do Memory.poke(memAddress+448, 1022);
			do Memory.poke(memAddress+480, 1022);
		}
		if (pos = 2) {
			do Memory.poke(memAddress+0, -4096);
			do Memory.poke(memAddress+32, -1024);
			do Memory.poke(memAddress+64, -512);
			do Memory.poke(memAddress+96, -256);
			do Memory.poke(memAddress+128, -128);
			do Memory.poke(memAddress+160, -128);
			do Memory.poke(memAddress+192, -64);
			do Memory.poke(memAddress+224, -64);
			do Memory.poke(memAddress+256, -64);
			do Memory.poke(memAddress+288, -128);
			do Memory.poke(memAddress+320, -128);
			do Memory.poke(memAddress+352, -256);
			do Memory.poke(memAddress+384, -256);
			do Memory.poke(memAddress+416, -512);
			do Memory.poke(memAddress+448, -34);
			do Memory.poke(memAddress+480, -1933);
			let memAddress = memAddress + 1;
			do Memory.poke(memAddress+0, 15);
			do Memory.poke(memAddress+32, 63);
			do Memory.poke(memAddress+64, 127);
			do Memory.poke(memAddress+96, 255);
			do Memory.poke(memAddress+128, 511);
			do Memory.poke(memAddress+160, 511);
			do Memory.poke(memAddress+192, 1023);
			do Memory.poke(memAddress+224, 1023);
			do Memory.poke(memAddress+256, 1023);
			do Memory.poke(memAddress+288, 511);
			do Memory.poke(memAddress+320, 511);
			do Memory.poke(memAddress+352, 255);
			do Memory.poke(memAddress+384, 255);
			do Memory.poke(memAddress+416, 127);
			do Memory.poke(memAddress+448, 31743);
			do Memory.poke(memAddress+480, -12769);
			let memAddress = memAddress + 511;
			do Memory.poke(memAddress+0, -8095);
			do Memory.poke(memAddress+32, 115);
			do Memory.poke(memAddress+64, 94);
			do Memory.poke(memAddress+96, 94);
			do Memory.poke(memAddress+128, 94);
			do Memory.poke(memAddress+160, 76);
			do Memory.poke(memAddress+192, 82);
			do Memory.poke(memAddress+224, 76);
			do Memory.poke(memAddress+256, 32);
			do Memory.poke(memAddress+288, 32);
			do Memory.poke(memAddress+320, 32);
			do Memory.poke(memAddress+352, -32);
			do Memory.poke(memAddress+384, -15872);
			do Memory.poke(memAddress+416, 17280);
			do Memory.poke(memAddress+448, 32704);
			do Memory.poke(memAddress+480, 32704);
			let memAddress = memAddress + 1;
			do Memory.poke(memAddress+0, -31225);
			do Memory.poke(memAddress+32, -12800);
			do Memory.poke(memAddress+64, 31232);
			do Memory.poke(memAddress+96, 31232);
			do Memory.poke(memAddress+128, 31232);
			do Memory.poke(memAddress+160, 12800);
			do Memory.poke(memAddress+192, 18944);
			do Memory.poke(memAddress+224, 12800);
			do Memory.poke(memAddress+256, 1024);
			do Memory.poke(memAddress+288, 1024);
			do Memory.poke(memAddress+320, 1024);
			do Memory.poke(memAddress+352, 2047);
			do Memory.poke(memAddress+384, 67);
			do Memory.poke(memAddress+416, 450);
			do Memory.poke(memAddress+448, 1022);
			do Memory.poke(memAddress+480, 1022);
		}
		if (pos = 3) {
			do Memory.poke(memAddress+0, -8192);
			do Memory.poke(memAddress+32, -2048);
			do Memory.poke(memAddress+64, -1024);
			do Memory.poke(memAddress+96, -512);
			do Memory.poke(memAddress+128, -256);
			do Memory.poke(memAddress+160, -256);
			do Memory.poke(memAddress+192, -128);
			do Memory.poke(memAddress+224, -128);
			do Memory.poke(memAddress+256, -256);
			do Memory.poke(memAddress+288, -26368);
			do Memory.poke(memAddress+320, 4352);
			do Memory.poke(memAddress+352, 256);
			do Memory.poke(memAddress+384, 14848);
			do Memory.poke(memAddress+416, 14848);
			do Memory.poke(memAddress+448, -15360);
			do Memory.poke(memAddress+480, 26624);
			let memAddress = memAddress + 1;
			do Memory.poke(memAddress+0, 15);
			do Memory.poke(memAddress+32, 63);
			do Memory.poke(memAddress+64, 127);
			do Memory.poke(memAddress+96, 255);
			do Memory.poke(memAddress+128, 511);
			do Memory.poke(memAddress+160, 511);
			do Memory.poke(memAddress+192, 1023);
			do Memory.poke(memAddress+224, 1023);
			do Memory.poke(memAddress+256, 1023);
			do Memory.poke(memAddress+288, 1023);
			do Memory.poke(memAddress+320, 511);
			do Memory.poke(memAddress+352, 510);
			do Memory.poke(memAddress+384, 248);
			do Memory.poke(memAddress+416, 120);
			do Memory.poke(memAddress+448, 99);
			do Memory.poke(memAddress+480, 54);
			let memAddress = memAddress + 511;
			do Memory.poke(memAddress+0, 14336);
			do Memory.poke(memAddress+32, 26624);
			do Memory.poke(memAddress+64, -15360);
			do Memory.poke(memAddress+96, -15360);
			do Memory.poke(memAddress+128, -15360);
			do Memory.poke(memAddress+160, -29696);
			do Memory.poke(memAddress+192, 18432);
			do Memory.poke(memAddress+224, -2048);
			do Memory.poke(memAddress+256, -4096);
			do Memory.poke(memAddress+288, 4096);
			do Memory.poke(memAddress+320, 8192);
			do Memory.poke(memAddress+352, 16384);
			do Memory.poke(memAddress+384, 16384);
			do Memory.poke(memAddress+416, 30720);
			do Memory.poke(memAddress+448, -512);
			do Memory.poke(memAddress+480, -512);
			let memAddress = memAddress + 1;
			do Memory.poke(memAddress+0, 28);
			do Memory.poke(memAddress+32, 54);
			do Memory.poke(memAddress+64, 51);
			do Memory.poke(memAddress+96, 115);
			do Memory.poke(memAddress+128, 83);
			do Memory.poke(memAddress+160, 81);
			do Memory.poke(memAddress+192, 146);
			do Memory.poke(memAddress+224, 159);
			do Memory.poke(memAddress+256, 159);
			do Memory.poke(memAddress+288, 272);
			do Memory.poke(memAddress+320, 272);
			do Memory.poke(memAddress+352, 264);
			do Memory.poke(memAddress+384, 520);
			do Memory.poke(memAddress+416, 520);
			do Memory.poke(memAddress+448, 1055);
			do Memory.poke(memAddress+480, 31);
		}
		if (pos = 4) {
			do Memory.poke(memAddress+0, -4096);
			do Memory.poke(memAddress+32, -1024);
			do Memory.poke(memAddress+64, -512);
			do Memory.poke(memAddress+96, -256);
			do Memory.poke(memAddress+128, -128);
			do Memory.poke(memAddress+160, -128);
			do Memory.poke(memAddress+192, -64);
			do Memory.poke(memAddress+224, -64);
			do Memory.poke(memAddress+256, -64);
			do Memory.poke(memAddress+288, -64);
			do Memory.poke(memAddress+320, -128);
			do Memory.poke(memAddress+352, 32640);
			do Memory.poke(memAddress+384, 7936);
			do Memory.poke(memAddress+416, 7680);
			do Memory.poke(memAddress+448, -14848);
			do Memory.poke(memAddress+480, 27648);
			let memAddress = memAddress + 1;
			do Memory.poke(memAddress+0, 7);
			do Memory.poke(memAddress+32, 31);
			do Memory.poke(memAddress+64, 63);
			do Memory.poke(memAddress+96, 127);
			do Memory.poke(memAddress+128, 255);
			do Memory.poke(memAddress+160, 255);
			do Memory.poke(memAddress+192, 511);
			do Memory.poke(memAddress+224, 511);
			do Memory.poke(memAddress+256, 255);
			do Memory.poke(memAddress+288, 131);
			do Memory.poke(memAddress+320, 128);
			do Memory.poke(memAddress+352, 128);
			do Memory.poke(memAddress+384, 92);
			do Memory.poke(memAddress+416, 92);
			do Memory.poke(memAddress+448, 35);
			do Memory.poke(memAddress+480, 22);
			let memAddress = memAddress + 511;
			do Memory.poke(memAddress+0, 14336);
			do Memory.poke(memAddress+32, 27648);
			do Memory.poke(memAddress+64, -13312);
			do Memory.poke(memAddress+96, -12800);
			do Memory.poke(memAddress+128, -13824);
			do Memory.poke(memAddress+160, -30208);
			do Memory.poke(memAddress+192, 18688);
			do Memory.poke(memAddress+224, -1792);
			do Memory.poke(memAddress+256, -1792);
			do Memory.poke(memAddress+288, 2176);
			do Memory.poke(memAddress+320, 2176);
			do Memory.poke(memAddress+352, 4224);
			do Memory.poke(memAddress+384, 4160);
			do Memory.poke(memAddress+416, 4160);
			do Memory.poke(memAddress+448, -2016);
			do Memory.poke(memAddress+480, -2048);
			let memAddress = memAddress + 1;
			do Memory.poke(memAddress+0, 28);
			do Memory.poke(memAddress+32, 22);
			do Memory.poke(memAddress+64, 35);
			do Memory.poke(memAddress+96, 35);
			do Memory.poke(memAddress+128, 35);
			do Memory.poke(memAddress+160, 49);
			do Memory.poke(memAddress+192, 18);
			do Memory.poke(memAddress+224, 31);
			do Memory.poke(memAddress+256, 15);
			do Memory.poke(memAddress+288, 8);
			do Memory.poke(memAddress+320, 4);
			do Memory.poke(memAddress+352, 2);
			do Memory.poke(memAddress+384, 2);
			do Memory.poke(memAddress+416, 30);
			do Memory.poke(memAddress+448, 127);
			do Memory.poke(memAddress+480, 127);
		}
		return;
	}
	
	/**clear a 16*16 cell, takes the stating position of the Screen RAM Map*/
	function void clearCell (int loc) {
		var int memAddress;
		var int i;
		let memAddress = 16384+loc;
		let i = 0;
		while (i < 16) {
			do Memory.poke(memAddress + (i * 32), 0);
			let i = i + 1;
		}
		return;
	}
}